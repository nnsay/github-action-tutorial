name: manage certification

run-name: deploy ${{ inputs.env_name }}  ${{ inputs.domain }} certification ${{ inputs.action }}

on:
  workflow_dispatch:
    inputs:
      domain:
        description: "domain name; eg: visualdynamics"
        default: visualdynamics
        required: true
        type: choice
        options:
          - visualdynamics
          - solarsketch
      env_name:
        description: "env name; eg: sandbox"
        default: sandbox
        required: true
        type: choice
        options:
          - sandbox
          - dev
          - staging
          - prod
      action:
        description: "deploy?"
        type: boolean
        default: true

env:
  # ENV_NAME: ${{ inputs.env_name }}
  DOMAIN: ${{ inputs.domain }}
  CERT_PRIVATE_SANDBOX_VISUALDYNAMICS: ${{ secrets.CERT_PRIVATE_SANDBOX_VISUALDYNAMICS }}

jobs:
  deploy:
    if: inputs.action
    name: upload certification
    runs-on: ubuntu-latest
    environment: ${{ inputs.env_name }}
    steps:
      - name: upload
        run: |
          echo ${{ env.ENV_NAME }}
          echo $ENV_NAME
          echo yarn nx run infra:cert
        env:
          ENV_NAME: ${{ env.ENV_NAME }}
  destroy:
    if: ${{ ! inputs.action }}
    name: delete certification
    runs-on: ubuntu-latest
    environment: ${{ inputs.env_name }}
    steps:
      - name: delete
        run: |
          echo "ENV_NAME: $ENV_NAME"
          echo "DOMAIN: $DOMAIN"
          echo yarn nx run infra:cert-destroy
