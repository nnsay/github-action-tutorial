name: reused workfow caller

run-name: ${{ inputs.envName }} operation 

on:
  workflow_dispatch:
    inputs:
      envName:
        description: give env name
        required: true
        type: choice
        default: sandbox
        options:
          - sandbox
          - dev

env:
  JOB_ENV1: p1
  JOB_ENV2: p2

jobs:
  conditon:
    runs-on: ubuntu-latest
    outputs:
      enable: ${{ steps.condition.outputs.enable }}
    steps:
      - name: set condition
        id: condition
        run: echo "enable=1" >> $GITHUB_OUTPUT
        # run: echo "enable=" >> $GITHUB_OUTPUT
  caller:
    name: call the reused workflow
    uses: ./.github/workflows/call.yaml
    needs: conditon
    with:
      iparameter: 'test01'
      envName: ${{ inputs.envName }}
      enable: ${{ needs.conditon.outputs.enable }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # caller2:
  #   name: call the reused workflow
  #   uses: ./.github/workflows/call.yaml
  #   with:
  #     iparameter: 'test01'
  #     envName: ${{ inputs.envName }}
  #     enable: ""
  #   secrets: inherit # same with above
  output:
    runs-on: ubuntu-latest
    needs: caller
    steps:
      - name: Print output
        run: echo "result value is ${{ needs.caller.outputs.result }}"
